{
  "env": {
    "browser": true,
    "es2021": true,
    "worker": true
  },
  "extends": ["eslint:all"],
  "parserOptions": {
    "ecmaVersion": "latest",
    "sourceType": "script"
  },
  "rules": {
    "array-element-newline": ["error", "consistent"],
    "arrow-parens": ["error", "as-needed"],
    "brace-style": ["error", "1tbs", { "allowSingleLine": true }],
    "camelcase": ["error", { "properties": "never" }],
    "capitalized-comments": "off",
    "complexity": "off", //qwq
    "curly": ["error", "multi-line"],
    "eqeqeq": ["error", "always", { "null": "ignore" }],
    "func-names": ["error", "never"],
    "func-style": ["error", "declaration", { "allowArrowFunctions": true }],
    "function-call-argument-newline": ["error", "never"],
    "id-length": "off",
    "indent": ["error", 2, { "SwitchCase": 1 }],
    "line-comment-position": "off",
    "lines-around-comment": ["error", { "beforeBlockComment": false }],
    "lines-between-class-members": ["error", "never"],
    "max-classes-per-file": "off",
    "max-depth": "off", //qwq
    "max-len": "off",
    "max-lines-per-function": "off", //?
    "max-lines": "off",
    "max-params": "off", //qwq
    "max-statements-per-line": "off", //qwq
    "max-statements": "off", //qwq
    "multiline-comment-style": ["error", "separate-lines"],
    "multiline-ternary": ["error", "never"],
    "newline-per-chained-call": "off", //qwq
    "no-alert": "off", //qwq
    "no-bitwise": "off",
    "no-confusing-arrow": "off", //qwq
    "no-console": "off", //qwq
    "no-continue": "off", //qwq
    "no-control-regex": "off",
    "no-empty-function": "off",
    "no-eq-null": "off",
    "no-implicit-globals": "off",
    "no-inline-comments": "off",
    "no-magic-numbers": "off", //qwq
    "no-mixed-operators": "off", //qwq
    "no-multiple-empty-lines": ["error", { "max": 0 }],
    "no-nested-ternary": "off",
    "no-plusplus": "off",
    "no-return-assign": "off",
    "no-self-assign": ["error", { "props": false }],
    "no-ternary": "off",
    "no-undefined": "off",
    "no-underscore-dangle": "off",
    "no-unused-vars": ["error", { "argsIgnorePattern": "^_" }],
    "no-use-before-define": ["error", "nofunc"],
    "no-warning-comments": "off", //qwq
    "object-curly-spacing": ["error", "always"],
    "object-property-newline": ["error", { "allowAllPropertiesOnSameLine": true }], //qwq
    "one-var": ["error", { "initialized": "never", "uninitialized": "always" }],
    "padded-blocks": ["error", "never"],
    "prefer-const": ["error", { "destructuring": "all" }],
    "prefer-destructuring": ["error", { "object": true, "array": false }],
    "prefer-named-capture-group": "off", //?
    "quote-props": ["error", "as-needed"],
    "quotes": ["error", "single"],
    "require-unicode-regexp": "off", //?
    "semi": ["error", "always", { "omitLastInOneLineBlock": true }],
    "sort-imports": ["error", { "ignoreDeclarationSort": true }],
    "sort-keys": "off",
    "space-before-function-paren": ["error", "never"],
    "strict": ["error", "global"],
    "wrap-regex": "off" //someday will be never
    // "array-bracket-spacing": "error", // space inside brackets
    // "comma-spacing": "error", // space after comma
    // "comma-style": "error", // comma at end
    // "curly": ["error", "multi"],
    // "key-spacing": "error", // space after colon
    // "linebreak-style": ["error", "unix"], // LF
    // "no-multi-spaces": "error", // no multi spaces
    // "no-multiple-empty-lines": ["error", { "max": 1, "maxEOF": 1 }],
    // "no-trailing-spaces": "error", // no trailing spaces
    // "object-curly-newline": ["error", { "consistent": true }],
    // "object-curly-spacing": ["error", "always"], // space inside braces
    // "space-before-blocks": "error", // space before block
    // "space-in-parens": "error", // space inside parens
    // "space-infix-ops": "error", // space around operators
    // "spaced-comment": "error", // space after comment
    // //spacing
  },
  "overrides": [
    {
      "files": [
        //qwq
        "./public/utils/aup.js",
        "./public/utils/interact.js",
        "./public/webgl/gl-core.js",
        "./public/webgl/script.js",
        "./scripts/*"
      ],
      "parserOptions": {
        "ecmaVersion": "latest",
        "sourceType": "module"
      },
      "rules": {
        "strict": ["error", "never"]
      }
    },
    {
      "files": ["./public/utils/main.js"],
      "rules": {},
      "globals": {
        "Utils": "off"
      }
    }
  ],
  "globals": {
    "hook": "writable",
    "Utils": "readonly"
  },
  "ignorePatterns": ["* copy.*", "**/lib/*", "**/service-worker.js", "**/sw.js"]
}
